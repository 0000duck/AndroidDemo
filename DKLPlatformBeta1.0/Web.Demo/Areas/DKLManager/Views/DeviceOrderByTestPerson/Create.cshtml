--  @using HYZK.FrameWork.Common
@using HYZK.FrameWork.Utility
@using HYZK.FrameWork.Web.Controls
@using DKLManager.Contract.Model;
@using Web.Common;
@using Web.Demo.Areas.DKLManager.Models;

@model DeviceOrderingViewModel

@{
    ViewBag.Title = "预约设备";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style type="text/css">
    #search-text-DeviceName {
        text-align: center;
        position: relative;
    }

    .autocomplete {
        border: 1px solid #9ACCFB;
        background-color: white;
        text-align: left;
    }

        .autocomplete li {
            list-style-type: none;
        }

    .clickable {
        cursor: default;
    }

    .highlight {
        background-color: #9ACCFB;
    }
</style>
@section PageSpecificJavascriptIncludes{

@*<script type="text/javascript" src="@Url.StaticFile("~/assets/js/js/jquery-ui.min.js")"></script>*@
<script type="text/javascript" src="@Url.StaticFile("~/assets/js/jQuery-Timepicker-Addon/jquery-ui-timepicker-addon.js")"></script>
<script type="text/javascript" src="@Url.StaticFile("~/assets/js/js/jquery.ui.datepicker-zh-CN.js.js")" charset="gb2312"></script>
<script type="text/javascript" src="@Url.StaticFile("~/assets/js/js/jquery-ui-timepicker-zh-CN.js")"></script>
    <script type="text/javascript">
        $(document).ready(function () {
           
            $("#OrderDate").datetimepicker(
            {

                timeFormat: "HH:mm:ss",
                dateFormat: "yy-mm-dd",
                changeYear: true,

            });

        });

    </script>

<script type="text/javascript">
    
    $(document).ready(function () {
        var herf = window.location.href;                    //获取当前地址
        herf = herf.substr(0, herf.indexOf("Create"));
        //取得div层
        var $search = $('#searchDeviceName')
        //取得输入框JQuery对象
        var $searchInput = $search.find('#search-text-DeviceName');
        //关闭浏览器提供给输入框的自动完成
        $searchInput.attr('autocomplete', 'off');
        //创建自动完成的下拉列表，用于显示服务器返回的数据,插入在搜索按钮的后面，等显示的时候再调整位置
        var $autocomplete = $('<div class="autocomplete"></div>')
        .hide()
        .insertAfter('#submit');
        //清空下拉列表的内容并且隐藏下拉列表区
        var clear = function () {
            $autocomplete.empty().hide();
        };
        //注册事件，当输入框失去焦点的时候清空下拉列表并隐藏
        $searchInput.blur(function () {
            setTimeout(clear, 500);
        });
        //下拉列表中高亮的项目的索引，当显示下拉列表项的时候，移动鼠标或者键盘的上下键就会移动高亮的项目，想百度搜索那样
        var selectedItem = null;
        //timeout的ID
        var timeoutid = null;
        //设置下拉项的高亮背景
        var setSelectedItem = function (item) {
            //更新索引变量
            selectedItem = item;
            //按上下键是循环显示的，小于0就置成最大的值，大于最大值就置成0
            if (selectedItem < 0) {
                selectedItem = $autocomplete.find('li').length - 1;
            }
            else if (selectedItem > $autocomplete.find('li').length - 1) {
                selectedItem = 0;
            }
            //首先移除其他列表项的高亮背景，然后再高亮当前索引的背景
            $autocomplete.find('li').removeClass('highlight')
            .eq(selectedItem).addClass('highlight');
        };
        var ajax_request = function () {
            //ajax服务端通信
            $.ajax({
                'url': herf + 'GetDeviceNameList', //服务器的地址
                'data': { 'search': $searchInput.val() }, //参数
                'dataType': 'json', //返回数据类型
                'type': 'POST', //请求类型
                'success': function (data) {
                    if (data.length) {
                        //遍历data，添加到自动完成区
                        $.each(data, function (index, term) {
                            //创建li标签,添加到下拉列表中
                            $('<li></li>').text(term).appendTo($autocomplete)
                            .addClass('clickable')
                            .hover(function () {
                                //下拉列表每一项的事件，鼠标移进去的操作
                                $(this).siblings().removeClass('highlight');
                                $(this).addClass('highlight');
                                selectedItem = index;
                            }, function () {
                                //下拉列表每一项的事件，鼠标离开的操作
                                $(this).removeClass('highlight');
                                //当鼠标离开时索引置-1，当作标记
                                selectedItem = -1;
                            })
                            .click(function () {
                                //鼠标单击下拉列表的这一项的话，就将这一项的值添加到输入框中
                                $searchInput.val(term);
                                //清空并隐藏下拉列表
                                $autocomplete.empty().hide();
                            });
                        });//事件注册完毕
                        //设置下拉列表的位置，然后显示下拉列表
                        var ypos = $searchInput.position().top;
                        var xpos = $searchInput.position().left;
                        $autocomplete.css('width', $searchInput.css('width'));
                        $autocomplete.css({ 'position': 'relative', 'left': xpos + "px", 'top': ypos + "px" });
                        setSelectedItem(0);
                        //显示下拉列表
                        $autocomplete.show();
                    }
                }
            });
        };
        //对输入框进行事件注册
        $searchInput
        .keyup(function (event) {
            //字母数字，退格，空格
            if (event.keyCode > 40 || event.keyCode == 8 || event.keyCode == 32) {
                //首先删除下拉列表中的信息
                $autocomplete.empty().hide();
                clearTimeout(timeoutid);
                timeoutid = setTimeout(ajax_request, 100);
            }
            else if (event.keyCode == 38) {
                //上
                //selectedItem = -1 代表鼠标离开
                if (selectedItem == -1) {
                    setSelectedItem($autocomplete.find('li').length - 1);
                }
                else {
                    //索引减1
                    setSelectedItem(selectedItem - 1);
                }
                event.preventDefault();
            }
            else if (event.keyCode == 40) {
                //下
                //selectedItem = -1 代表鼠标离开
                if (selectedItem == -1) {
                    setSelectedItem(0);
                }
                else {
                    //索引加1
                    setSelectedItem(selectedItem + 1);
                }
                event.preventDefault();
            }
        })
        .keypress(function (event) {
            //enter键
            if (event.keyCode == 13) {
                //列表为空或者鼠标离开导致当前没有索引值
                if ($autocomplete.find('li').length == 0 || selectedItem == -1) {
                    return;
                }
                $searchInput.val($autocomplete.find('li').eq(selectedItem).text());
                $autocomplete.empty().hide();
                event.preventDefault();
            }
        })
        .keydown(function (event) {
            //esc键
            if (event.keyCode == 27) {
                $autocomplete.empty().hide();
                event.preventDefault();
            }
        });
        //注册窗口大小改变的事件，重新调整下拉列表的位置
        $(window).resize(function () {
            var ypos = $searchInput.position().top;
            var xpos = $searchInput.position().left;
            $autocomplete.css('width', $searchInput.css('width'));
            $autocomplete.css({ 'position': 'relative', 'left': xpos + "px", 'top': ypos + "px" });
        });
    });
</script>
 }


<h4 class="breadcrumb">预约设备</h4>

@using (Html.BeginForm("AddOrder", "DeviceOrderByTestPerson"))
{
    <div class="container-fluid">
        <div class="row-fluid">
            <div class="col-md-12 col-xs-12">
                <span>项目编号：</span>@Html.TextBoxFor(m => m.orderInfo.ProjectNumber, new { @class = "m-wrap small", @readonly = "" })

                @if (Model.orderInfo.OrderDate != DateTime.MinValue)
                {
                    <span>预约时间：</span>@Html.TextBox("OrderDate", Model.orderInfo.OrderDate.ToShortDateString(), new { @class = "m-wrap small", id = "OrderDate" })
                }
                else
                {
                    <span>预约时间：</span>@Html.TextBox("OrderDate", Model.orderInfo.OrderDate, new { @class = "m-wrap small", id = "OrderDate" })
                }
                <span class="help-inline">@Html.ValidationMessageFor(m => m.orderInfo.OrderDate)</span>
            </div>
            <hr />
            <input type="button" id="submit" style="display:none" value="搜索" /> 
            <div class="col-md-12 col-xs-12">
                @*<span>设备名称：</span>@Html.DropDownList("DeviceName")*@
                @*<span class="help-inline">@Html.ValidationMessageFor(m => m.orderDetail.DeviceName)</span>*@
                <div class="control-group1">
                    
                    <label class="control-label">设备名称：</label>
                    <div class="controls">                  
                        <div id="searchDeviceName">
                            @Html.TextBoxFor(m => m.orderDetail.DeviceName, new { @class = "m-wrap small", id = "search-text-DeviceName" })
                            <span class="help-inline">@Html.ValidationMessageFor(m => m.orderDetail.DeviceName)</span>
                        </div>
                    </div>
                </div>
                <span>个数：</span>@Html.TextBoxFor(m => m.orderDetail.OrderNumber, new { @class = "m-wrap small" })
                <span class="help-inline">@Html.ValidationMessageFor(m => m.orderDetail.OrderNumber)</span>

                <button type="submit" class="btn">添加 </button>
                <a class="btn red" name="Number" value="@Model.orderInfo.ProjectNumber"  id="delete" href="javascript:;"><i class="icon-trash icon-white"></i> 删除</a>
            </div>
        </div>
    </div>
    @Html.ValidationSummary(true)
}

@using (Html.BeginForm("Delete", "DeviceOrderByTestPerson", FormMethod.Post, new { id = "mainForm" }))
{
    <table class="table table-striped table-hover ">
        <thead>
            <tr>
                <th style="width: 8px;">
                    <input type="checkbox" id="checkall" class="group-checkable" />
                </th>
                <th width="50">
                    项目编号
                </th>
                <th>
                    设备名称
                </th>
                <th>
                    个数
                </th>
                <th>
                    操作
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model.orderDetailList)
            {
                <tr>
                    <td>
                        <input type="checkbox" class="checkboxes" name='DeviceNames' value='@p.DeviceName' />
                    </td>
                    <td class="blue">
                        <span>@(p.ProjectNumber)</span>
                    </td>
                    <td>
                        <span>@(p.DeviceName)</span>
                    </td>
                    <td>
                        <span>@(p.OrderNumber)</span>
                    </td>
                    <td>
                        <a class="btn mini purple thickbox" title='编辑角色资料' href="@Url.Action("Edit", new { DeviceName = p.DeviceName })?TB_iframe=true&height=450&width=500">
                            <i class="icon-edit"></i>
                            编辑
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.ValidationSummary(true)
}

@using (Html.BeginForm("Create", "DeviceOrderByTestPerson", FormMethod.Post, new { id = "mainForm", enctype = "multipart/form-data" }))
{
    <button type="submit" id="submit" class="btn blue" name="Number" value="@Model.orderInfo.ProjectNumber"><i class="icon-ok"></i> 提交</button>
}
